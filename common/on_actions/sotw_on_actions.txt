on_actions = {
	### State / City name changing ###
	on_startup = {
		effect = {
            if = {
                limit = {
                    NOT = {
                        has_global_flag = endonyms_enabled
                    }
                }
				set_global_flag = endonyms_enabled
				every_state = {
						state_control_change_effect = yes
				}
            }
        }
	}
	
	on_ruling_party_change = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled 
				}
				ROOT.ROOT = {
					every_state = {
						state_control_change_effect = yes
					}
				}
			}
		}
	}
	
	on_subject_autonomy_level_change = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled
				}
				ROOT.ROOT = {
					every_state = {
						state_control_change_effect = yes
					}
				}
			}
		}
	}

	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled
				}
				FROM.FROM = {
					state_control_change_effect = yes
				}
			}
		}
	}

	on_capitulation = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled
				}
				ROOT.ROOT = {
					every_state = {
						state_control_change_effect = yes
					}
				}
			}
		}
    }

	on_peaceconference_ended = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled
				}
				FROM.FROM = {
					every_state = {
						state_control_change_effect = yes
					}
				}
			}
		}
    }

    # ROOT is winner, FROM gets annexed.
    on_annex  = {
		effect = {
			if = {
				limit = {
					has_global_flag = endonyms_enabled
				}
				FROM.FROM = {
					every_state = {
						state_control_change_effect = yes
					}
				}
			}
		}
    }
	### END OF STATE / CITY NAME CHANGING ###

	### SPHERES OF INFLUENCE SYSTEM ###
	on_startup = {
		effect = {
			GER = {
				add_country_faction_to_sphere = yes
				update_country_sphere = yes #
			}
			USA = {
				add_country_faction_to_sphere = yes
				update_country_sphere = yes # doesnt calculate gdp idk why
			}
		}
	}

	# Automatically give military access to countries you are sending volunteers to
	on_send_volunteers = {
		effect = {
			if = {
				limit = {
					ROOT = {
						not = {
							has_military_access_to = FROM
						}
					}
				}
				ROOT = {
					set_country_flag = sotw_volunteer_sender
				}
				FROM = {
					give_military_access = ROOT
				}
				FROM = {
					set_country_flag = sotw_volunteer_receiever
				}
			}
		}
	}
	on_daily = {
		effect  = {
			# Automatically give military access to countries you are sending volunteers to
			every_country = {
				limit = {
					is_ai = yes
					has_country_flag = {
						flag = sotw_volunteer_receiever
						days > 20
					}
				}
				every_other_country = {
					limit = {
						has_country_flag = sotw_volunteer_sender
						PREV = {
							has_volunteers_amount_from = {
								tag = PREV
								count < 1
							}
						}
					}
					diplomatic_relation = {
						country = PREV
						relation = military_access
						active = no
					}
					clr_country_flag = sotw_volunteer_sender
					PREV = {
						clr_country_flag = sotw_volunteer_receiever
					}
				}
			}
			############# END
		}
	}

	on_weekly = {
		effect = {
			# Spheres of influence dlc
			update_country_sphere = yes
			### War losses being converted to losses in states
			if = {
				limit = {
					check_variable = { casualties_k > casualties_calculated_deaths_k }
				}
				set_variable = { casualties_civs_to_be_removed_k = casualties_k }
				subtract_from_variable = { casualties_civs_to_be_removed_k = casualties_calculated_deaths_k }
				add_to_variable = { casualties_calculated_deaths_k = casualties_civs_to_be_removed_k }
				set_variable = { casualties_civs_to_be_removed = casualties_civs_to_be_removed_k }
				multiply_variable = { casualties_civs_to_be_removed = 400 }

				every_state = { 
					limit = {
						OR = {
							is_core_of = ROOT
							is_owned_by = ROOT
						}
					}

					set_variable = { casualties_civs_percent_for_state = state_population_k }
					divide_variable = { casualties_civs_percent_for_state = ROOT.max_manpower_k }
					clamp_variable = {
						var = casualties_civs_percent_for_state
						min = 0.001
					}
					set_variable = { casualties_civs_to_be_removed_for_state = ROOT.casualties_civs_to_be_removed }
					multiply_variable = { casualties_civs_to_be_removed_for_state = casualties_civs_percent_for_state }
					round_variable = casualties_civs_to_be_removed_for_state
					multiply_variable = { casualties_civs_to_be_removed_for_state = -1 }
					add_manpower = casualties_civs_to_be_removed_for_state
				}
			}
			# War end/some shit happened
			if = {
				limit = {
					check_variable = { casualties_calculated_deaths_k > casualties_k }
				}
				set_variable = { casualties_calculated_deaths_k = casualties_k }
			}
			########## END
		}
	}
}