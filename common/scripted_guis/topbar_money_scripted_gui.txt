scripted_gui = {
	# Hides Topbar Money Container
	hide_money = {
		context_type = player_context

		window_name = "hide_money_button"

		dirty = global.update_monie_ui

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			hide_money_bg_click = {
				ROOT = { set_country_flag = hide_money }
			}
		}
	}
	# Shows Topbar Money Container
	show_money = {
		context_type = player_context

		window_name = "show_money_button"

		dirty = global.update_monie_ui

		visible = {
			ROOT = { has_country_flag = hide_money }
		}

		effects = {
			show_money_bg_click = {
				ROOT = { clr_country_flag = hide_money }
			}
		}
	}

	# Topbar Containers
	# Debt Container within the topbar
	debt = {
		context_type = player_context

		window_name = "debt_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			#Take debt
			debt_bg_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 1 }
					add_to_variable = { debt = 1.01 }
					ingame_update_setup = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1070 1b debt taken (Total Debt: Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_control_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 10 }
					add_to_variable = { debt = 10.1 }
					ingame_update_setup = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1071 10b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_shift_click = {
				if = {
					limit = { check_variable = { interest_rate < 20 } }
					add_to_variable = { treasury = 100 }
					add_to_variable = { debt = 101 }
					ingame_update_setup = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1072 100b debt taken (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}

		  	#Repay $1b debt
			debt_bg_right_click = {
				# You have enough money and debt to pay $1b T/T
				if = { limit = {
					check_variable = { var = treasury value = 1 compare = greater_than_or_equals }
					check_variable = { var = debt value = 1 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 1 }
					subtract_from_variable = { debt = 1 }
				}
				# You have enough money to pay $1b but less than $1b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 1 compare = greater_than_or_equals }
					check_variable = { var = debt value = 1 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $1b, have enough debt to pay $1b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 1 compare = less_than_or_equals }
					check_variable = { var = debt value = 1 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $1b, and don't have enough debt to pay $1b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
					if = { limit = { is_debug = yes }
						log = "1b Repay debt Case 5"
					}
				}
				ingame_update_setup = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1073 1b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_control_right_click = {
				# You have enough money and debt to pay $10b T/T
				if = { limit = {
					check_variable = { var = treasury value = 10 compare = greater_than_or_equals }
					check_variable = { var = debt value = 10 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 10 }
					subtract_from_variable = { debt = 10 }
				}
				# You have enough money to pay $10b but less than $10b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 10 compare = greater_than_or_equals }
					check_variable = { var = debt value = 10 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $10b, have enough debt to pay $10b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 10 compare = less_than_or_equals }
					check_variable = { var = debt value = 10 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $10b, and don't have enough debt to pay $10b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				ingame_update_setup = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1074 10b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			debt_bg_shift_right_click = {
				# You have enough money and debt to pay $100b T/T
				if = { limit = {
					check_variable = { var = treasury value = 100 compare = greater_than_or_equals }
					check_variable = { var = debt value = 100 compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = 100 }
					subtract_from_variable = { debt = 100 }
				}
				# You have enough money to pay $100b but less than $100b in debt T/F
				else_if = { limit = {
					check_variable = { var = treasury value = 100 compare = greater_than_or_equals }
					check_variable = { var = debt value = 100 compare = less_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# You don't have enough money to pay $100b, have enough debt to pay $100b F/T
				else_if = { limit = {
					check_variable = { var = treasury value = 100 compare = less_than_or_equals }
					check_variable = { var = debt value = 100 compare = greater_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				# You don't have enough money to pay $100b, and don't have enough debt to pay $100b F/F
				# Money > Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = greater_than_or_equals } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
				}
				# Money < Debt
				else_if = { limit = {
					check_variable = { var = treasury value = debt compare = less_than_or_equals } }
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
				}
				ingame_update_setup = yes
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1075 100b debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			#Pay off maximum
			debt_bg_alt_right_click = {
				if = {
					limit = { check_variable = { treasury > debt } }
					subtract_from_variable = { treasury = debt }
					subtract_from_variable = { debt = debt }
					ingame_update_setup = yes
				}
				else = {
					subtract_from_variable = { debt = treasury }
					subtract_from_variable = { treasury = treasury }
					ingame_update_setup = yes
				}
				log = "[GetDateText]: [THIS.GetName]: DEBUG: 1076 Max debt paid (Total Debt: [?debt]b, Interest Rate: [?interest_rate]% balance:[?treasury_rate]b, Total Treasury:[?treasury], Total Treasury Rate:[?treasury_rate])"
			}
			
			# Automatically Pay off Debt
			debt_bg_alt_shift_right_click = {
				if = {
					limit = {
						NOT = { has_country_flag = automatically_pay_off_debt_enabled }
					}
					set_country_flag = automatically_pay_off_debt_enabled
				}
				else = {
					clr_country_flag = automatically_pay_off_debt_enabled
				}
			}
		}

		triggers = {
			####
			debt_bg_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			debt_bg_control_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			debt_bg_shift_right_click_enabled = {
				check_variable = { treasury > 0 }
				check_variable = { debt > 0 }
			}
			# debt_bg_alt_right_click_enabled = {
			# 	NOT = { has_idea = bankrupcy }
			# }

			# debt_bg_click_enabled = {
			# 	NOT = { has_idea = bankrupcy }
			# }
			# debt_bg_control_click_enabled = {
			# 	NOT = { has_idea = bankrupcy }
			# }
			# debt_bg_shift_click_enabled = {
			# 	NOT = { has_idea = bankrupcy }
			# }
		}

		# AI Section
		# ai_enabled enables the AI for this GUI
		ai_enabled = { always = yes }
		# ai_test_interval is the time in hours that is used to test the ai_check
		ai_test_interval = 120 # 5 Days
		ai_check = { has_available_treasury = yes }
		ai_max_weight_taken_per_test = 3 # Allow the AI to select up to 3 if necessary

		ai_weights = {
			# ------- #
			# Repaying Debt AI
			# This section primarily deals with the AI decreasing debt
			debt_bg_right_click = { # Repay Debt -- 1 Billion
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 5 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_control_right_click = { #Repay debt -- 10 debt
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 15 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_shift_right_click = { #should force the AI to repay 100 debt if they have the funds
				ai_will_do = {
					factor = 5
					# Interest Rate Methodology
					modifier = {
						set_temp_variable = { temp_interest_rate = 1.50 }
						multiply_temp_variable = { temp_interest_rate = interest_rate }
						has_variable = interest_rate
						factor = temp_interest_rate
					}
					# GDP Debt Ratio Methodology
					# Start being more likely to pay debt
					modifier = {
						set_temp_variable = { temp_debt_ratio = 2 }
						multiply_temp_variable = { temp_debt_ratio = debt_ratio }
						check_variable = { debt_ratio > 0.50 }
						factor = temp_debt_ratio
					}
					# Killswitches
					modifier = {
						factor = 0
						OR = {
							check_variable = { treasury < 115 }
							check_variable = { treasury_rate < 0 }
						}
					}
				}
			}
			debt_bg_alt_right_click = {
				ai_will_do = {
					factor = 100
					modifier = {
						factor = 2
						check_variable = { treasury > debt }
					}
					modifier = {
						factor = 0
						check_variable = { treasury < debt }
					}
				}
			}
		}
	}
	# Treasury Topbar Container
	treasury = {
		context_type = player_context

		window_name = "treasury_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			treasury_bg_click = {
				if = {
					limit = {
						OR = {
							NOT = { has_country_flag = open_economy_screen }
							is_ai = yes
						}
					}

					set_country_flag = open_economy_screen
				}
				else = {
					clr_country_flag = open_economy_screen
				}
			}
		}
	}
	# International Investments Topbar Container
	int_investments = {
		context_type = player_context

		window_name = "int_investments_container"

		visible = {
			ROOT = { NOT = { has_country_flag = hide_money } }
		}

		effects = {
			#Sell off investments
			int_investments_bg_right_click = {
				subtract_from_variable = { int_investments = 1 }
				add_to_variable = { treasury = 0.60 }
				ingame_update_setup = yes
			}
			int_investments_bg_control_right_click = {
				subtract_from_variable = { int_investments = 10 }
				add_to_variable = { treasury = 6.0 }
				ingame_update_setup = yes
			}
			int_investments_bg_shift_right_click = {
				subtract_from_variable = { int_investments = 100 }
				add_to_variable = { treasury = 60 }
				ingame_update_setup = yes
			}

			# Reinvestment Feature
			int_investments_bg_shift_click = {
				if = { limit = { has_country_flag = int_reinvestment_flag }
					clr_country_flag = int_reinvestment_flag
				}
				else = {
					set_country_flag = int_reinvestment_flag
				}
				ingame_update_setup = yes
			}

			int_investments_bg_control_click = {
				if = { limit = { has_country_flag = int_auto_reject_investment_flag }
					clr_country_flag = int_auto_reject_investment_flag
				}
				else = {
					set_country_flag = int_auto_reject_investment_flag
				}
				ingame_update_setup = yes
			}
		}

		triggers = {
			int_investments_bg_right_click_enabled = {
				check_variable = { int_investments > 1 }
			}
			int_investments_bg_control_right_click_enabled = {
				check_variable = { int_investments > 10 }
			}
			int_investments_bg_shift_right_click_enabled = {
				check_variable = { int_investments > 100 }
			}
		}
	}
}